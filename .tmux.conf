# ================================================================================
# .tmux.conf
# ================================================================================

# Session Global Option (set-option -g)
# ================================================================================

# Prefix を Ctrl + q にする
set-option -g prefix C-q

# ペインの番号を 1 から開始する (デフォルトは 0)
set-option -g base-index 1

# tmux 上の vi で colorscheme が有効にならないため設定する
set-option -g default-terminal screen-256color

set-option -g pane-border-style fg="colour51"

set-option -g pane-active-border-style fg="colour196"

# マウス操作を有効にする
set-option -g mouse on

# キーストロークのディレイを減らす
set-option -sg escape-time 1

set-option -g status-interval 1

set-option -g status-right "[%Y-%m-%d (%a) %H:%M:%S]"

# MacOS : reattach-to-user-namespace を使用してクリップボード共有を有効にする
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1'  'set-option -g default-command "reattach-to-user-namespace -l bash"'


# Window Global Option (set-window-option)
# ================================================================================

# ウィンドウの番号を 1 から開始する (デフォルトは 0)
set-window-option -g pane-base-index 1

# コピーモード (Prefix + [ で開始) で vi キーバインドを使う
set-window-option -g mode-keys vi

# Preferences
# ================================================================================

# status line
#------------------------------------------------
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour43]#[fg=colour22,bg=colour43,noreverse,bold] #I #W #[fg=colour43,bg=colour234,nobold]"
set -g status-right "#[fg=colour8,bg=colour234]#[fg=colour252,bg=colour8] load: #(tmux-status-load) "
set -ga status-right "#[fg=colour23,bg=colour8]#[fg=colour122,bg=colour23] memory: #(tmux-status-mem) "
set -ga status-right "#[fg=colour248,bg=colour23]#[fg=colour233,bg=colour248] %m/%d %H:%M "



# Bind Key
# ================================================================================

## sessions
#------------------------------------------------
bind-key s list-sessions 
# switch current session [shorthand of Prefix + '(' or ')']
bind-key -n C-S-Left switch-client -n
bind-key -n C-S-Right switch-client -p

## windows
#------------------------------------------------
# move(reorder) current window
bind-key -n C-S-Up next-window
bind-key -n C-S-Down previous-window
bind-key -n C-S-M-Up swap-window -t +1
bind-key -n C-S-M-Down swap-window -t -1


## panes
#------------------------------------------------
# Prefix + \ ・ Prefix + | でペインを縦に分割する
#bind-key -r v split-window -h
#bind-key | split-window -h
# Prefix + - でペインを横に分割する
#bind-key -r s split-window -v

# Prefix + hjkl でペイン移動
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R
# alius
bind-key -n M-Left select-pane -L
bind-key -n M-Down select-pane -D
bind-key -n M-Up select-pane -U
bind-key -n M-Right select-pane -R


# Prefix + Shift + hjkl でペインをリサイズする
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

## copy & paste
#------------------------------------------------
# Prefix + v でコピーモードを開始する (デフォルトは Prefix + [)
bind-key v copy-mode \; display "Copy Mode!"

# Prefix + Ctrl + p でペースト (デフォルトは Prefix + ]・クリップボード共有しているので Cmd + V でも OK)
bind-key C-p paste-buffer

# コピーモード中 v か Space で選択を始める
bind-key -T copy-mode-vi v send -X begin-selection \; display "Copy Start."
bind-key -T copy-mode-vi Space send -X begin-selection \; display "Copy Start."
# コピーモード中 V で行選択を始める
bind-key -T copy-mode-vi V send -X select-line \; display "Copy Line Start."

bind-key -T copy-mode-vi C-v send -X rectangle-toggle \; display "Copy Rectangle Start."

# コピーモード中 y か Enter でヤンク (コピー)
# MacOS : reattach-to-user-namespace を使用
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1'  'bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display "Copied!"'
  if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1'  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display "Copied!"'
# Windows : tmux save-buffer で echo しパイプを使って clip.exe に渡す
    if -b 'command -v clip.exe                   > /dev/null 2>&1'  'bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "tmux save-buffer - | clip.exe" \; display "Copied!"'
      if -b 'command -v clip.exe                   > /dev/null 2>&1'  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "tmux save-buffer - | clip.exe" \; display "Copied!"'

# コピーモード中 Esc で中止
bind-key -T copy-mode-vi Escape send -X cancel

## others
#------------------------------------------------
# Prefix + r で設定ファイルをリロードする
bind-key r source-file ~/.tmux.conf \; display "Reloaded."

# Prefix + o で tmux 用の画面クリアコマンドを入力する
bind-key o send-keys "clear && tmux clear-history" \; send-keys Enter


# Plugins
# ================================================================================
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  '

set -g @resurrect-strategy-vim 'session'

run-shell '~/.tmux/plugins/tpm/tpm'
