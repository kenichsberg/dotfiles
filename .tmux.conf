# ================================================================================
# .tmux.conf
# ================================================================================



# Session Global Option (set-option -g)
# ================================================================================
# set prefix to Ctrl + q
set-option -g prefix C-q

# start pain number from 1
set-option -g base-index 1

# enable colorscheme on vi (on tmux)
set-option -g default-terminal screen-256color
set-option -g pane-border-style fg="colour51"
set-option -g pane-active-border-style fg="colour196"

# enable mouse
set-option -g mouse on

# reduce delay of key stroke
set-option -sg escape-time 1

set-option -g status-interval 1

set-option -g status-right "[%Y-%m-%d (%a) %H:%M:%S]"

# for MacOS : enable sharing clip board
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1'  'set-option -g default-command "reattach-to-user-namespace -l bash"'


# Window Global Option (set-window-option)
# ================================================================================

# start window number from 1
set-window-option -g pane-base-index 1

# use vim keybinding in copy mode
set-window-option -g mode-keys vi

# Preferences
# ================================================================================

# status line
#------------------------------------------------
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g window-status-activity-attr bold
set -g pane-border-fg colour245
set -g pane-active-border-fg colour39
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour43]#[fg=colour22,bg=colour43,noreverse,bold] #I #W #[fg=colour43,bg=colour234,nobold]"
set -g status-right "#[fg=colour8,bg=colour234]#[fg=colour252,bg=colour8] load: #(tmux-status-load) "
set -ga status-right "#[fg=colour23,bg=colour8]#[fg=colour122,bg=colour23] memory: #(tmux-status-mem) "
set -ga status-right "#[fg=colour248,bg=colour23]#[fg=colour233,bg=colour248] %m/%d %H:%M "



# Keybinding
# ================================================================================

## sessions
#------------------------------------------------
# show session list
bind-key s list-sessions 
# switch current session (default:  Prefix + '(' / Prefix + ')')
bind-key -n C-S-Left switch-client -n
bind-key -n C-S-Right switch-client -p

## windows
#------------------------------------------------
# activate another window (default: Prefix + 'n' / Prefix + 'p')
bind-key -n C-S-Up next-window
bind-key -n C-S-Down previous-window
# move(reorder) current window
bind-key -n C-S-M-Up swap-window -t +1
bind-key -n C-S-M-Down swap-window -t -1


## panes
#------------------------------------------------
# Prefix + \ ・ Prefix + | でペインを縦に分割する
#bind-key -r v split-window -h
#bind-key | split-window -h
# Prefix + - でペインを横に分割する
#bind-key -r s split-window -v

# activate another pane
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R
# the same of the above
bind-key -n M-Left select-pane -L
bind-key -n M-Down select-pane -D
bind-key -n M-Up select-pane -U
bind-key -n M-Right select-pane -R


# resize pane
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

## copy & paste
#------------------------------------------------
# show message when start copy mode
bind-key [ copy-mode \; display "Copy Mode!"

## paste by Prefix + Ctrl + p
#bind-key C-p paste-buffer

# in copy mode, start selection by v #or Space
bind-key -T copy-mode-vi v send -X begin-selection \; display "Copy Start."
#bind-key -T copy-mode-vi Space send -X begin-selection \; display "Copy Start."
# in copy mode, start ROW selection by V
bind-key -T copy-mode-vi V send -X select-line \; display "Copy Line Start."

bind-key -T copy-mode-vi C-v send -X rectangle-toggle \; display "Copy Rectangle Start."

# in copy mode, yank by y or Enter
#   for MacOS -- use reattach-to-user-namespace
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1'  'bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display "Copied!"'
  if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1'  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \; display "Copied!"'
#   for Windows -- echo by tmux save-buffer and give it to clip.exe through pipe
    if -b 'command -v clip.exe                   > /dev/null 2>&1'  'bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "tmux save-buffer - | clip.exe" \; display "Copied!"'
      if -b 'command -v clip.exe                   > /dev/null 2>&1'  'bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "tmux save-buffer - | clip.exe" \; display "Copied!"'

# for [L]ubuntu
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard" bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"


# end copy mode by Esc
bind-key -T copy-mode-vi Escape send -X cancel

## others
#------------------------------------------------
# reload .tmux.conf by Prefix + r
bind-key r source-file ~/.tmux.conf \; display "Reloaded."

# clear terminal history by Prefix + o
bind-key o send-keys "clear && tmux clear-history" \; send-keys Enter


# Plugins
# ================================================================================
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
  '

set -g @resurrect-strategy-vim 'session'

run-shell '~/.tmux/plugins/tpm/tpm'
